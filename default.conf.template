server {
    listen                                  9440 ssl;
    server_name                             localhost;
    ssl_certificate                         /etc/nginx/certs/localhost.crt;
    ssl_certificate_key                     /etc/nginx/certs/localhost.key;
    gzip                                    off;

    location / {
        auth_basic                          off;
        root                                /usr/share/nginx/html;
        index                               index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        auth_basic                          off;
        root                                /usr/share/nginx/html;
    }

	# this is the internal Docker DNS
    resolver                                127.0.0.11;

    auth_basic                              "Restricted";
    auth_basic_user_file                    /usr/share/nginx/html/.htpasswd;

    set $upstream ${PRISM_IP}:9440;
    proxy_http_version                      1.1;
    proxy_pass_request_headers              on;
    proxy_set_header Host                   $host;
    proxy_set_header                        Authorization "Basic ${AuthorizationBase64}";

    # docker plugin enable nutanix
    location = /PrismGateway/services/rest/v1/containers/ {
        if ($request_method = GET ) {
            proxy_pass                      https://$upstream/PrismGateway/services/rest/v1/containers/?searchString=$remote_user;
        }
    }

    location = /api/nutanix/v0.8/volume_groups {
        # docker volume create --driver nutanix ...
        if ($request_method = POST ) {
            proxy_pass                          https://$upstream/api/nutanix/v0.8/volume_groups;
        }

        # NGINX does not natively support switching to fastcgi under if
        # so we use "echo_location" function from module ngx_echo
        # to call /volume_groups/list
        if ($request_method = GET ) {
            echo_location /volume_groups/list;
        }
    }

    # docker plugin ls
    # docker volume ls
    location = /volume_groups/list {
        fastcgi_buffering                   off;
        fastcgi_param                       NO_BUFFERING 1;
        fastcgi_param                       DOCUMENT_ROOT $document_root;

        fastcgi_pass                        unix:/var/run/fcgiwrap.sock;
        include                             /etc/nginx/fastcgi_params;
        fastcgi_param                       SCRIPT_FILENAME /scripts/volume_groups.sh;
        fastcgi_param                       UPSTREAM $upstream;
        fastcgi_param                       AuthorizationBase64 "${AuthorizationBase64}";
        fastcgi_param                       REMOTE_USER $remote_user;
    }

    location ~* /api/nutanix/v0.8/volume_groups/(.*)/open$ {
        # start container
        if ($request_method = POST ) {
            proxy_pass                      https://$upstream/api/nutanix/v0.8/volume_groups/$1/open;
        }
    }

    location ~* /api/nutanix/v0.8/volume_groups/(.*)/close$ {
        # stop container
        if ($request_method = POST ) {
            proxy_pass                      https://$upstream/api/nutanix/v0.8/volume_groups/$1/close;
        }
    }

    location ~* /api/nutanix/v0.8/volume_groups/(.*)$ {
        # docker volume inspect ...
        if ($request_method = GET ) {
            proxy_pass                      https://$upstream/api/nutanix/v0.8/volume_groups/$1?includeDiskSize=True;
        }

        # docker volume rm ...
        if ($request_method = DELETE ) {
            return                          200 '{"taskUuid":"00000000-0000-0000-0000-000000000000"}';
            add_header                      Content-Type application/json;
        }
    }

    # Poll task
    location ~* /api/nutanix/v0.8/tasks/(.*)/poll$ {
        proxy_pass                          https://$upstream/api/nutanix/v0.8/tasks/$1/poll?timeoutseconds=5;
    }
}